<project name="My Project" default="help" basedir=".">
    <!-- Define the properties used by the build -->
    <property name="app.name" value="sample"/>
    <property name="tomcat.home" value="/usr/local/apache-tomcat-6.0.35"/>
    <property name="work.home" value="${basedir}/work"/>
    <property name="dist.home" value="${basedir}/dist"/>
    <property name="src.home" value="${basedir}/src"/>
    <property name="web.home" value="${basedir}/web"/>
    <property name="war.name" value="${app.name}.war"/>
    <condition property="tomcat.startup.executable"
               value="${tomcat.home}/bin/startup.bat"
               else="${tomcat.home}/bin/startup.sh">
        <os family="windows" />
    </condition>

    <target name="help">
        <echo>You can use the following targets:</echo>
        <echo></echo>
        <echo>help : (default) Prints this message</echo>
        <echo>all : Cleans, compiles, and packages application</echo>
        <echo>clean : Deletes work directories</echo>
        <echo>compile : Compiles servlets into class files</echo>
        <echo>dist : Packages artifacts into a deployable WAR</echo>
        <echo></echo>
        <echo>For example, to clean, compile, and package all at once, run:</echo>
        <echo>prompt> ant all</echo>
    </target>

    <!-- Define the CLASSPATH -->
    <path id="compile.classpath">
        <fileset dir="${tomcat.home}/bin">
            <include name="*.jar"/>
        </fileset>
        <pathelement location="${tomcat.home}/lib"/>
        <fileset dir="${tomcat.home}/lib">
            <include name="*.jar"/>
        </fileset>
    </path>

    <target name="all" depends="stop-tomcat,clean,compile,dist"
            description="Clean work dirs, then compile and create a WAR">
        <delete dir="${tomcat.home}/webapps/${app.name}"/>
        <delete file="${tomcat.home}/webapps/${war.name}"/>
        <copy file="${basedir}/dist/${war.name}" todir="${tomcat.home}/webapps" overwrite="true"/>
        <antcall target="start-tomcat"/>

    </target>

    <target name="start-tomcat">
        <echo message="Starting tomcat at ${tomcat.home}"/>
        <exec executable="${tomcat.startup.executable}"/>
        <waitfor maxwait="120" maxwaitunit="second" checkevery="10" timeoutproperty="tomcat-start-failed">
            <http url="http://localhost:8080/"/>
        </waitfor>
        <sleep seconds="5"/>
        <fail message="Failed to start tomcat, check db issues if any" if="tomcat-start-failed"/>
    </target>

    <target name="stop-tomcat">
        <java jar="${tomcat.home}/bin/bootstrap.jar" fork="true">
            <arg value="stop"/>
            <jvmarg value="-Dcatalina.home=${tomcat.home}"/>
        </java>
    </target>

    <target name="clean"
            description="Delete old work and dist directories">
        <delete dir="${work.home}"/>
        <delete dir="${dist.home}"/>
    </target>

    <target name="prepare" depends="clean"
            description="Create working dirs and copy static files to work dir">
        <mkdir dir="${dist.home}"/>
        <mkdir dir="${work.home}/WEB-INF/classes"/>
        <!-- Copy static HTML and JSP files to work dir -->
        <copy todir="${work.home}">
            <fileset dir="${web.home}"/>
        </copy>
    </target>

    <target name="compile" depends="prepare"
            description="Compile Java sources and copy to WEB-INF/classes dir">
        <javac srcdir="${src.home}"
               destdir="${work.home}/WEB-INF/classes">
            <classpath refid="compile.classpath"/>
        </javac>
        <copy todir="${work.home}/WEB-INF/classes">
            <fileset dir="${src.home}" excludes="**/*.java"/>
        </copy>

    </target>


    <target name="dist" depends="compile"
            description="Create WAR file for binary distribution">
        <jar jarfile="${dist.home}/${app.name}.war"
             basedir="${work.home}"/>
    </target>

</project>